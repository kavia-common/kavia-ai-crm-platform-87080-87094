{"is_source_file": true, "format": "Python", "description": "This file defines REST API routes for managing activities, including listing, creating, retrieving, updating, and deleting activity records using FastAPI. It relies on external service and schema modules to perform database operations and data validation.", "external_files": ["src/db/session.py", "src.schemas.activities.py", "src.services.activities.py"], "external_methods": ["get_session", "ActivityCreate", "ActivityOut", "ActivityUpdate", "activity_service.list", "activity_service.create", "activity_service.get", "activity_service.update", "activity_service.delete"], "published": ["list_activities", "create_activity", "get_activity", "update_activity", "delete_activity"], "classes": [], "methods": [{"name": "list_activities(page: int = Query(1, ge=1), size: int = Query(20, ge=1, le=100))", "description": "Handles GET requests to list activities with pagination, returning a list of ActivityOut objects.", "scope": "", "scopeKind": ""}, {"name": "create_activity(payload: ActivityCreate)", "description": "Handles POST requests to create a new activity entry based on provided data.", "scope": "", "scopeKind": ""}, {"name": "get_activity(activity_id: int)", "description": "Handles GET requests to retrieve a specific activity by its ID.", "scope": "", "scopeKind": ""}, {"name": "update_activity(activity_id: int, payload: ActivityUpdate)", "description": "Handles PUT requests to update an existing activity identified by its ID.", "scope": "", "scopeKind": ""}, {"name": "delete_activity(activity_id: int)", "description": "Handles DELETE requests to remove an activity by ID.", "scope": "", "scopeKind": ""}], "calls": ["get_session()", "activity_service.list()", "activity_service.create()", "activity_service.get()", "activity_service.update()", "activity_service.delete()"], "search-terms": ["FastAPI router for activities", "CRUD activity endpoints", "activity_service", "src.schemas.activities", "src.db.session"], "state": 2, "file_id": 21, "knowledge_revision": 44, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/routes/activities.py", "pattern": "/^def create_activity(payload: ActivityCreate):$/", "language": "Python", "kind": "function", "signature": "(payload: ActivityCreate)"}, {"_type": "tag", "name": "delete_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/routes/activities.py", "pattern": "/^def delete_activity(activity_id: int):$/", "language": "Python", "kind": "function", "signature": "(activity_id: int)"}, {"_type": "tag", "name": "get_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/routes/activities.py", "pattern": "/^def get_activity(activity_id: int):$/", "language": "Python", "kind": "function", "signature": "(activity_id: int)"}, {"_type": "tag", "name": "list_activities", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/routes/activities.py", "pattern": "/^def list_activities(page: int = Query(1, ge=1), size: int = Query(20, ge=1, le=100)):$/", "language": "Python", "kind": "function", "signature": "(page: int = Query(1, ge=1), size: int = Query(20, ge=1, le=100))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/routes/activities.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/routes/activities.py", "pattern": "/^def update_activity(activity_id: int, payload: ActivityUpdate):$/", "language": "Python", "kind": "function", "signature": "(activity_id: int, payload: ActivityUpdate)"}], "hash": "ee64f4fb657aec62cccee444d10752dc", "format-version": 4, "code-base-name": "crm_backend", "filename": "crm_backend/src/routes/activities.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"44": ""}]}