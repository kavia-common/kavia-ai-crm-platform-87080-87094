{"is_source_file": true, "format": "Python", "description": "This file defines a set of REST API endpoints for managing 'accounts' in a CRM backend system. It uses FastAPI for routing and SQLAlchemy for database interactions, providing CRUD operations (create, read, update, delete) for account entities.", "external_files": ["src.core.database", "src.models.crm_models", "src.schemas.crm"], "external_methods": ["get_db", "Account", "AccountCreate", "AccountUpdate"], "published": ["list_accounts", "create_account", "get_account", "update_account", "patch_account", "delete_account"], "classes": [], "methods": [{"name": "Account _get_account_or_404(db: Session, account_id: int)", "description": "Helper function to retrieve an account by ID or raise 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "list_accounts( db: Session = Depends(get_db), q: Optional[str] = Query(default=None, description=\"Search by name, domain, or industry\"), owner_user_id: Optional[str] = Query(default=None, description=\"Filter by owner user id\"), limit: int = Query(default=50, ge=1, le=200, description=\"Max number of records\"), offset: int = Query(default=0, ge=0, description=\"Offset for pagination\"), )", "description": "List accounts with optional filtering and pagination.", "scope": "", "scopeKind": ""}, {"name": "create_account(payload: AccountCreate, db: Session = Depends(get_db))", "description": "Create a new account with provided data.", "scope": "", "scopeKind": ""}, {"name": "get_account(account_id: int, db: Session = Depends(get_db))", "description": "Retrieve an account by its ID.", "scope": "", "scopeKind": ""}, {"name": "update_account(account_id: int, payload: AccountCreate, db: Session = Depends(get_db))", "description": "Update an existing account fully with provided data.", "scope": "", "scopeKind": ""}, {"name": "patch_account(account_id: int, payload: AccountUpdate, db: Session = Depends(get_db))", "description": "Partially update fields of an existing account.", "scope": "", "scopeKind": ""}, {"name": "delete_account(account_id: int, db: Session = Depends(get_db))", "description": "Delete an account by ID.", "scope": "", "scopeKind": ""}], "calls": ["db.get", "db.execute", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["accounts API", "FastAPI router accounts", "crm account endpoints", "accounts CRUD FastAPI", "SQLAlchemy account operations"], "state": 2, "file_id": 11, "knowledge_revision": 28, "git_revision": "", "ctags": [{"_type": "tag", "name": "AccountSchema", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^from src.schemas.crm import Account as AccountSchema, AccountCreate, AccountUpdate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:Account"}, {"_type": "tag", "name": "_get_account_or_404", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def _get_account_or_404(db: Session, account_id: int) -> Account:$/", "language": "Python", "typeref": "typename:Account", "kind": "function", "signature": "(db: Session, account_id: int)"}, {"_type": "tag", "name": "create_account", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def create_account(payload: AccountCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: AccountCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_account", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def delete_account(account_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(account_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_account", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def get_account(account_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(account_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_accounts", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def list_accounts($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), q: Optional[str] = Query(default=None, description=\"Search by name, domain, or industry\"), owner_user_id: Optional[str] = Query(default=None, description=\"Filter by owner user id\"), limit: int = Query(default=50, ge=1, le=200, description=\"Max number of records\"), offset: int = Query(default=0, ge=0, description=\"Offset for pagination\"), )"}, {"_type": "tag", "name": "patch_account", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def patch_account(account_id: int, payload: AccountUpdate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(account_id: int, payload: AccountUpdate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^router = APIRouter(prefix=\"\\/accounts\", tags=[\"accounts\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_account", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/accounts.py", "pattern": "/^def update_account(account_id: int, payload: AccountCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(account_id: int, payload: AccountCreate, db: Session = Depends(get_db))"}], "hash": "cec790af911810aa6100635e42af86c5", "format-version": 4, "code-base-name": "crm_backend", "filename": "crm_backend/src/api/routers/accounts.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/accounts\", tags=[\"accounts\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"28": ""}]}