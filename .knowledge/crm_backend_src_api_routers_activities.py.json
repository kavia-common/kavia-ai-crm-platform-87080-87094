{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing activity logs within a CRM backend. It includes functions for listing, creating, retrieving, updating, and deleting activity records, interacting with a database via SQLAlchemy ORM and FastAPI framework.", "external_files": ["src.core.database", "src.models.crm_models", "src.schemas.crm"], "external_methods": ["get_db", "ActivityLog", "Activity", "ActivityCreate", "ActivityUpdate"], "published": ["list_activities", "create_activity", "get_activity", "patch_activity", "delete_activity"], "classes": [], "methods": [{"name": "ActivityLog _get_or_404(db: Session, activity_id: int)", "description": "Utility function to retrieve an ActivityLog by ID or raise a 404 HTTPException if not found.", "scope": "", "scopeKind": ""}, {"name": "list_activities( db: Session = Depends(get_db), deal_id: Optional[int] = Query(default=None), contact_id: Optional[int] = Query(default=None), completed: Optional[bool] = Query(default=None), limit: int = Query(default=50, ge=1, le=200), offset: int = Query(default=0, ge=0), )", "description": "Handler to list activity logs with optional filtering parameters.", "scope": "", "scopeKind": ""}, {"name": "create_activity(payload: ActivityCreate, db: Session = Depends(get_db))", "description": "Handler to create a new activity log entry.", "scope": "", "scopeKind": ""}, {"name": "get_activity(activity_id: int, db: Session = Depends(get_db))", "description": "Handler to retrieve a specific activity by its ID.", "scope": "", "scopeKind": ""}, {"name": "patch_activity(activity_id: int, payload: ActivityUpdate, db: Session = Depends(get_db))", "description": "Handler to partially update an existing activity record.", "scope": "", "scopeKind": ""}, {"name": "delete_activity(activity_id: int, db: Session = Depends(get_db))", "description": "Handler to delete an activity record by ID.", "scope": "", "scopeKind": ""}], "calls": ["db.get", "db.execute", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["FastAPI activities router", "ActivityLog CRUD endpoints", "Activities API CRM", "Database interaction activities", "activities.py source"], "state": 2, "file_id": 15, "knowledge_revision": 36, "git_revision": "", "ctags": [{"_type": "tag", "name": "ActivitySchema", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^from src.schemas.crm import Activity as ActivitySchema, ActivityCreate, ActivityUpdate$/", "language": "Python", "kind": "unknown", "nameref": "unknown:Activity"}, {"_type": "tag", "name": "_get_or_404", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^def _get_or_404(db: Session, activity_id: int) -> ActivityLog:$/", "language": "Python", "typeref": "typename:ActivityLog", "kind": "function", "signature": "(db: Session, activity_id: int)"}, {"_type": "tag", "name": "create_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^def create_activity(payload: ActivityCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: ActivityCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^def delete_activity(activity_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(activity_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^def get_activity(activity_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(activity_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_activities", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^def list_activities($/", "language": "Python", "kind": "function", "signature": "( db: Session = Depends(get_db), deal_id: Optional[int] = Query(default=None), contact_id: Optional[int] = Query(default=None), completed: Optional[bool] = Query(default=None), limit: int = Query(default=50, ge=1, le=200), offset: int = Query(default=0, ge=0), )"}, {"_type": "tag", "name": "patch_activity", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^def patch_activity(activity_id: int, payload: ActivityUpdate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(activity_id: int, payload: ActivityUpdate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/kavia-ai-crm-platform-87080-87094/crm_backend/src/api/routers/activities.py", "pattern": "/^router = APIRouter(prefix=\"\\/activities\", tags=[\"activities\"])$/", "language": "Python", "kind": "variable"}], "hash": "d1937a77421fe5d74e7aac2f3ad1d209", "format-version": 4, "code-base-name": "crm_backend", "filename": "crm_backend/src/api/routers/activities.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/activities\", tags=[\"activities\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"36": ""}]}