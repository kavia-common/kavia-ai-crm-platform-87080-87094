# Environment variables for Kavia AI CRM Backend
# Copy this file to .env and adjust values. The orchestrator will manage actual .env provisioning.

# ENVIRONMENT
ENV=development
DEBUG=false

# DATABASE
# For local dev you may use sqlite (file-based)
# CRM_DB_URL=sqlite:///./crm.db
# Example for Postgres: postgresql+psycopg2://user:password@host:5432/dbname
CRM_DB_URL=sqlite:///./crm.db
DB_ECHO=false

# CORS
CORS_ALLOW_ORIGINS=*

# AI feature toggles
AI_LEAD_SCORING_ENABLED=true
AI_FORECASTING_ENABLED=true
AI_PROBABILITY_ENABLED=true
```

Explanation: Update README with backend run instructions.

````write file="kavia-ai-crm-platform-87080-87094/crm_backend/README.md"
# Kavia AI CRM Backend

FastAPI backend providing REST APIs for contacts, accounts, deals, activity logs, pipeline management, and AI endpoints (lead scoring, forecasting, probability).

## Features
- CRUD for Contacts, Accounts, Deals, Activities, Pipelines/Stages
- AI endpoints:
  - Lead scoring (heuristic, persisted to contact)
  - Probability estimation for deals
  - Forecast summary and weighted forecast
- Environment-driven configuration
- OpenAPI docs at /docs

## Run (dev)
1. Create and populate .env (see .env.example).
2. Install dependencies:
   pip install -r requirements.txt
3. Start server:
   uvicorn src.api.main:app --reload --host 0.0.0.0 --port 8000

## Database
- Default uses SQLite file `crm.db` in project root. To integrate with `crm_database`, set CRM_DB_URL accordingly using provided env vars from that service.

## Generate OpenAPI
python -m src.api.generate_openapi

The schema is saved to interfaces/openapi.json.
```

Explanation: Adjust __init__ at api for package clarity.

````edit file="kavia-ai-crm-platform-87080-87094/crm_backend/src/api/__init__.py"
<<<<<<< SEARCH
=======
# API package initializing FastAPI app and related utilities.
>>>>>>> REPLACE
